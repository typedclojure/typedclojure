;; AUTOGENERATED FOR LOCAL DEV ONLY!!
;; edit via dev/src/typed/dev/merge_deps.clj
{:aliases
 {:eastwood
  {:extra-deps
   {jonase/eastwood
    {:git/sha "bbe8610",
     :git/tag "Release-0.9.9",
     :git/url "https://github.com/jonase/eastwood.git"}},
   :main-opts
   ["-m"
    "eastwood.lint"
    {:exclude-linters #{:def-in-def :unlimited-use}}]},
  :kaocha
  {:extra-deps
   {lambdaisland/kaocha
    {:git/sha "24e2e02d0848160343a6f9ac629f0f8e27a682ea",
     :git/url "https://github.com/lambdaisland/kaocha.git"}}},
  :nREPL
  {:extra-deps
   {cider/cider-nrepl {:mvn/version "0.47.0"},
    cider/piggieback {:mvn/version "0.5.3"},
    net.cgrand/parsley {:mvn/version "0.9.3"},
    nrepl/nrepl {:mvn/version "1.1.1"},
    reply/reply {:mvn/version "0.5.1"}},
   :jvm-opts ["-XX:-OmitStackTraceInFastThrow"]},
  :nREPL-runner
  {:main-opts
   ["-m"
    "nrepl.cmdline"
    "--interactive"
    "--middleware"
    "[cider.nrepl/wrap-complete,cider.nrepl/wrap-info]"]},
  :perf
  {:extra-paths
   ["/Applications/YourKit-Java-Profiler-2019.8.app/Contents/Resources/lib/yjp-controller-api-redist.jar"],
   :jvm-opts
   ["-agentpath:/Applications/YourKit-Java-Profiler-2019.8.app/Contents/Resources/bin/mac/libyjpagent.dylib"]},
  :spec-skip-macros {:jvm-opts ["-Dclojure.spec.skip-macros=true"]},
  :test
  {:extra-deps
   {com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.2.2"},
    com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.0"},
    com.gfredericks/test.chuck {:mvn/version "0.2.12"},
    criterium/criterium {:mvn/version "0.4.5"},
    org.clojure/clojurescript {:mvn/version "1.11.60"},
    org.clojure/core.logic {:mvn/version "1.0.1"},
    org.clojure/math.combinatorics
    {:exclusions [org.clojure/clojure], :mvn/version "0.1.6"},
    org.clojure/test.check {:mvn/version "1.1.1"},
    org.clojure/tools.analyzer.jvm {:mvn/version "1.2.3"},
    org.clojure/tools.nrepl
    {:exclusions [org.clojure/clojure], :mvn/version "0.2.6"}},
   :extra-paths
   ["typed/clj.analyzer/test"
    "typed/clj.checker/test"
    "typed/clj.checker/test-resources"
    "typed/clj.runtime/test"
    "typed/clj.spec/test"
    "typed/cljc.analyzer/test"
    "typed/cljs.analyzer/test"
    "typed/cljs.checker/test"
    "typed/cljs.runtime/test"
    "typed/lib.clojure/test"
    "typed/lib.core.async/test"
    "typed/lib.spec.alpha/test"
    "typed/malli/test"],
   :jvm-opts
   ["-Djdk.attach.allowAttachSelf"
    "-Dtyped.cljc.checker.utils.trace=true"
    "-Dtyped.cljc.analyzer.passes/direct-link=false"]},
  :typed
  {:exec-args
   {:dirs
    ["typed/clj.analyzer/src"
     "typed/clj.checker/src"
     "typed/clj.runtime/resources"
     "typed/clj.runtime/src"
     "typed/clj.spec/src"
     "typed/cljc.analyzer/src"
     "typed/cljs.analyzer/src"
     "typed/cljs.checker/src"
     "typed/cljs.runtime/src"
     "typed/lib.clojure/src"
     "typed/lib.core.async/src"
     "typed/lib.spec.alpha/src"
     "typed/malli/src"],
    :watch-dirs
    ("typed/clj.analyzer/src"
     "typed/clj.checker/src"
     "typed/clj.runtime/resources"
     "typed/clj.runtime/src"
     "typed/clj.spec/src"
     "typed/cljc.analyzer/src"
     "typed/cljs.analyzer/src"
     "typed/cljs.checker/src"
     "typed/cljs.runtime/src"
     "typed/lib.clojure/src"
     "typed/lib.core.async/src"
     "typed/lib.spec.alpha/src"
     "typed/malli/src"
     "typed/clj.analyzer/test"
     "typed/clj.checker/test"
     "typed/clj.checker/test-resources"
     "typed/clj.runtime/test"
     "typed/clj.spec/test"
     "typed/cljc.analyzer/test"
     "typed/cljs.analyzer/test"
     "typed/cljs.checker/test"
     "typed/cljs.runtime/test"
     "typed/lib.clojure/test"
     "typed/lib.core.async/test"
     "typed/lib.spec.alpha/test"
     "typed/malli/test"),
    :refresh-dirs
    ("typed/clj.analyzer/src"
     "typed/clj.checker/src"
     "typed/clj.runtime/resources"
     "typed/clj.runtime/src"
     "typed/clj.spec/src"
     "typed/cljc.analyzer/src"
     "typed/cljs.analyzer/src"
     "typed/cljs.checker/src"
     "typed/cljs.runtime/src"
     "typed/lib.clojure/src"
     "typed/lib.core.async/src"
     "typed/lib.spec.alpha/src"
     "typed/malli/src"
     "typed/clj.analyzer/test"
     "typed/clj.checker/test"
     "typed/clj.runtime/test"
     "typed/clj.spec/test"
     "typed/cljc.analyzer/test"
     "typed/cljs.analyzer/test"
     "typed/cljs.checker/test"
     "typed/cljs.runtime/test"
     "typed/lib.clojure/test"
     "typed/lib.core.async/test"
     "typed/lib.spec.alpha/test"
     "typed/malli/test")},
   :exec-fn typed.clojure.main/exec}},
 :deps
 {selmer/selmer {:mvn/version "1.12.50"},
  org.clojure/clojure {:mvn/version "1.12.0"},
  org.typedclojure/typed.clj.checker
  {:deps/manifest :deps, :local/root "typed/clj.checker"},
  org.typedclojure/typed.clj.analyzer
  {:deps/manifest :deps, :local/root "typed/clj.analyzer"},
  org.typedclojure/typed.lib.core.async
  {:deps/manifest :deps, :local/root "typed/lib.core.async"},
  org.typedclojure/typed.cljc.analyzer
  {:deps/manifest :deps, :local/root "typed/cljc.analyzer"},
  org.typedclojure/typed.malli
  {:deps/manifest :deps, :local/root "typed/malli"},
  org.typedclojure/typed.lib.spec.alpha
  {:deps/manifest :deps, :local/root "typed/lib.spec.alpha"},
  org.typedclojure/typed.lib.clojure
  {:deps/manifest :deps, :local/root "typed/lib.clojure"},
  org.typedclojure/typed.clj.spec
  {:deps/manifest :deps, :local/root "typed/clj.spec"},
  org.typedclojure/typed.cljs.analyzer
  {:deps/manifest :deps, :local/root "typed/cljs.analyzer"},
  org.typedclojure/typed.cljs.checker
  {:deps/manifest :deps, :local/root "typed/cljs.checker"},
  org.typedclojure/typed.cljs.runtime
  {:deps/manifest :deps, :local/root "typed/cljs.runtime"},
  org.typedclojure/typed.clj.runtime
  {:deps/manifest :deps, :local/root "typed/clj.runtime"}},
 :paths ["dev/src"]}
