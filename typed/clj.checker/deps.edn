;; DO NOT EDIT! Instead, edit `dev/resources/root-templates/typed/clj.checker/deps.edn` and run `./script/regen-selmer.sh`
{:paths ["src"],
 :deps
 {org.clojure/clojure {:mvn/version "1.12.0"},
  org.clojure/core.cache {:mvn/version "1.0.225"},
  org.typedclojure/typed.clj.analyzer {:local/root "../clj.analyzer" :deps/manifest :deps},
  org.typedclojure/typed.lib.clojure {:local/root "../lib.clojure" :deps/manifest :deps},
  org.typedclojure/typed.lib.spec.alpha {:local/root "../lib.spec.alpha" :deps/manifest :deps},
  org.typedclojure/typed.clj.runtime {:local/root "../clj.runtime" :deps/manifest :deps},
  org.clojure/math.combinatorics {:mvn/version "0.2.0", :exclusions [org.clojure/clojure]},
  org.clojure/tools.namespace {:mvn/version "1.4.4"},
  org.clojure/tools.reader {:mvn/version "1.4.1"}
  com.nextjournal/beholder {:mvn/version "1.0.2"}
  babashka/process {:mvn/version "0.5.22"}
  io.github.frenchy64/fully-satisfies {:mvn/version "1.12.0"}},
 :mvn/repos
 {"sonatype-oss-public"
  {:url "https://oss.sonatype.org/content/groups/public/"}},
 :aliases
 {:script {:extra-paths ["script"]},
  :nREPL
  {:extra-deps
   {nrepl/nrepl {:mvn/version "1.1.1"}
    cider/cider-nrepl {:mvn/version "0.47.0"}},
   :main-opts ["-m" "nrepl.cmdline" "--interactive"
               #_"
               Note:
                 introducing other middleware makes vim-fireplace choose
                 fipp for pprint, which doesn't play well with the delicately
                 defined classes in type-rep."
               "--middleware" "[cider.nrepl/wrap-complete]"
               ]},
  :spec-skip-macros
  {:jvm-opts ["-Dclojure.spec.skip-macros=true"]}
  :test
  {:jvm-opts ["-Djdk.attach.allowAttachSelf"
              "-Dtyped.cljc.checker.utils.trace=true"]
   :extra-paths ["test" "test-resources"],
   :extra-deps
   {;; for typed.clj.generate
    org.clojure/test.check
    {:mvn/version "1.1.1"}
    com.gfredericks/test.chuck
    {:mvn/version "0.2.12"}
    org.clojure/tools.nrepl
    {:mvn/version "0.2.6", :exclusions [org.clojure/clojure]}
    com.clojure-goes-fast/clj-java-decompiler {:mvn/version "0.3.0"}
    com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.2.2"}
    ;; for shared tests
    org.typedclojure/typed.cljs.checker {:local/root "../cljs.checker" :deps/manifest :deps}
    ;; optional typed.lib.clojure dep
    org.typedclojure/typed.clj.spec {:local/root "../clj.spec" :deps/manifest :deps}}},
  :kaocha
  {:extra-deps {lambdaisland/kaocha {:git/url "https://github.com/lambdaisland/kaocha.git"
                                     ;; https://github.com/lambdaisland/kaocha/issues/208#issuecomment-822844384
                                     :git/sha "24e2e02d0848160343a6f9ac629f0f8e27a682ea"}}}
  :codox
  {:extra-deps {codox/codox {:mvn/version "0.10.7"}}
   :extra-paths ["script"]
   :main-opts ["-m" "gen-doc"]}
  :profile
  {:extra-deps {com.clojure-goes-fast/clj-async-profiler {:mvn/version "1.2.2"}}
   :extra-paths ["script"]
   :main-opts ["-m" "profile"]}
  :eastwood
  {:main-opts ["-m" "eastwood.lint" {}]
   :extra-deps {jonase/eastwood {:mvn/version "0.9.4"}}}
  :runner
  {:extra-deps
   {io.github.cognitect-labs/test-runner
    {:git/url "https://github.com/cognitect-labs/test-runner"
     :git/sha "dd6da11611eeb87f08780a30ac8ea6012d4c05ce"}}
   :main-opts
   ["-m"
    "cognitect.test-runner"
    "-d"
    "test/clojure/core/typed/test"
    "-r"
    ".*"]}}}
