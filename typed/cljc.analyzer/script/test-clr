#!/bin/bash
# TODO use deps-clr.edn
# Run tests for typed.cljc.analyzer under ClojureCLR
#
# Prerequisites:
# - ClojureCLR (Clojure.Main) must be installed as a dotnet tool
# - .NET 8.0 or later must be installed

set -e

# Get the directory where this script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_ROOT="$( cd "$SCRIPT_DIR/.." && pwd )"

echo "Running typed.cljc.analyzer tests under ClojureCLR..."

# Set up classpath using deps-clr.edn
# For now, manually construct CLOJURE_LOAD_PATH based on deps-clr.edn
# since clr.tools.deps may not be fully functional yet
export CLOJURE_LOAD_PATH="${PROJECT_ROOT}/src:${PROJECT_ROOT}/test"
echo "CLOJURE_LOAD_PATH=$CLOJURE_LOAD_PATH"

# Create a test runner script
cat > /tmp/run-cljc-analyzer-clr-tests.clj << 'EOF'
(ns run-clr-tests
  (:require [clojure.test :as test]))

(println "Loading test namespaces...")

;; Load all test namespaces
(require 'typed-test.cljc.analyzer)

(println "Running tests...")
(let [results (test/run-tests 'typed-test.cljc.analyzer)]
  (println "\nTest Results:" results)
  (println "\nSummary:")
  (println (format "  Tests: %d" (:test results)))
  (println (format "  Passed: %d assertions" (:pass results)))
  (println (format "  Failed: %d assertions" (:fail results)))
  (println (format "  Errors: %d assertions" (:error results)))
  (when (pos? (:error results))
    (println "\nNote: Some errors are expected on ClojureCLR due to platform differences")
    (println "      (e.g., missing Java reflection APIs, different exception types)."))
  (if (pos? (:fail results))
    (do
      (println "\nFAILURE: Tests failed")
      (System.Environment/Exit 1))
    (do
      (println "\nSUCCESS: All tests passed!")
      (System.Environment/Exit 0))))
EOF

# Run the test script with ClojureCLR
# Exit with the same code as Clojure.Main to propagate test failures
Clojure.Main /tmp/run-cljc-analyzer-clr-tests.clj "$@"
exit $?
