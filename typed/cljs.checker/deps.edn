;; DO NOT EDIT! Instead, edit `dev/resources/root-templates/typed/cljs.checker/deps.edn` and run `./script/regen-selmer.sh`
{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "1.12.0-rc1"}
        org.clojure/tools.analyzer.jvm {:mvn/version "1.2.3"}
        io.github.frenchy64/fully-satisfies {:mvn/version "1.12.1-SNAPSHOT"}
        org.typedclojure/typed.clj.checker {:local/root "../clj.checker"
                                            :deps/manifest :deps}
        org.typedclojure/typed.cljs.runtime {:local/root "../cljs.runtime"
                                             :deps/manifest :deps}
        org.typedclojure/typed.cljs.analyzer {:local/root "../cljs.analyzer"
                                            :deps/manifest :deps}
        org.clojure/clojurescript {:mvn/version "1.11.60"}}
 :aliases {:nREPL
           {:extra-paths ["script"]
            :extra-deps
            {nrepl/nrepl {:mvn/version "1.1.1"}
             cider/piggieback {:mvn/version "0.5.3"}}
            :main-opts ["-m" "nrepl.cmdline"
                        "--interactive"]}

           :reply
           {:extra-deps
            {reply/reply {:mvn/version "0.5.1"}}
            :main-opts ["-m" "reply.main"]}

           :start-repl
           {:extra-paths ["script"]
            :extra-deps
            {com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
            :main-opts ["-m" "start-repl"]}

           :test
           {:extra-paths ["test"]
            :extra-deps {;org.clojure/tools.nrepl {:mvn/version "0.2.6"
                         ;                         :exclusions [org.clojure/clojure]}
                         ;org.clojure/core.async {:mvn/version "1.6.681"
                         ;                        :exclusions [org.clojure/tools.analyzer.jvm]}
                         ;org.clojure/tools.trace {:mvn/version "0.7.5"
                         ;                         :exclusions [org.clojure/clojure]}

                         org.typedclojure/typed.lib.core.async {:local/root "../lib.core.async"
                                            :deps/manifest :deps}
                         org.clojure/test.check {:mvn/version "1.1.1"}
                         com.gfredericks/test.chuck {:mvn/version "0.2.12"}}}
           :kaocha
           {:extra-deps {lambdaisland/kaocha {:git/url "https://github.com/lambdaisland/kaocha.git"
                                              ;; https://github.com/lambdaisland/kaocha/issues/208#issuecomment-822844384
                                              :git/sha "24e2e02d0848160343a6f9ac629f0f8e27a682ea"}}}
           :codox
           {:extra-deps {codox/codox {:mvn/version "0.10.7"}}
            :extra-paths ["script"]
            :main-opts ["-m" "gen-doc"]}
           :runner
           {:extra-deps {io.github.cognitect-labs/test-runner
                         {:git/url "https://github.com/cognitect-labs/test-runner"
                          :git/sha "dd6da11611eeb87f08780a30ac8ea6012d4c05ce"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "test/clojure/core/typed/test"
                        "-r" ".*"
                        ;"-w" "clojure.test.junit/with-junit-output"
                        ;"-o" "junit-output.xml"
                        ]}}}
