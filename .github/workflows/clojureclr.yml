# Test ClojureCLR
#
# This workflow tests ClojureCLR support in Typed Clojure as a first step towards
# full CLR platform compatibility. Currently, the user-facing macros from
# typed.clj.runtime are tested on ClojureCLR.
#
# Workflow Steps:
# 1. Sets up .NET 8.0 runtime on Ubuntu
# 2. Installs ClojureCLR 1.12.3-alpha3 as a dotnet global tool
# 3. Creates a compatibility shim for the io.github.frenchy64.fully-satisfies.requiring-resolve library
# 4. Runs typed.clj.runtime test suite
#
# Implementation Details:
#
# Compatibility Shim:
# Since the io.github.frenchy64.fully-satisfies.requiring-resolve library is not
# available for ClojureCLR, a shim is created that uses ClojureCLR's built-in
# requiring-resolve function:
#
#   (ns io.github.frenchy64.fully-satisfies.requiring-resolve)
#   (def requiring-resolve clojure.core/requiring-resolve)
#
# This shim is added to the classpath during testing.
#
# Classpath Configuration:
# The workflow uses the CLOJURE_LOAD_PATH environment variable to configure the classpath:
#
#   export CLOJURE_LOAD_PATH="$(pwd)/test-clr:$(pwd)/typed/clj.runtime/src"
#
# This ensures both the runtime sources and the compatibility shim are available to ClojureCLR.
#
# Future Work:
# - Test additional typed.clojure macros on ClojureCLR
# - Test the full type checker on ClojureCLR
# - Add support for CLR-specific type annotations
# - Integrate ClojureCLR testing into the main CI pipeline

name: Test ClojureCLR

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

jobs:
  test-clojureclr:
    runs-on: ubuntu-latest
    # only test main if in typedclojure/typedclojure repo
    if: ${{ !(github.ref == 'refs/heads/main'
              && github.repository != 'typedclojure/typedclojure'
              && github.event_name == 'push')
         }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: '8.0.x'
      
      - name: Install ClojureCLR
        run: |
          # Install ClojureCLR as a dotnet tool
          dotnet tool install --global Clojure.Main --version 1.12.3-alpha3
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
      
      - name: Verify ClojureCLR installation
        run: |
          which Clojure.Main || echo "Clojure.Main not in PATH"
          ls -la ~/.dotnet/tools/
      
      # Commented out temporarily - testing analyzers first
      # - name: Run typed.clj.runtime test suite
      #   run: |
      #     cd $GITHUB_WORKSPACE/typed/clj.runtime
      #     echo "Running typed.clj.runtime test suite with ClojureCLR..."
      #     ./script/test-clr
      
      - name: Run typed.cljc.analyzer test suite
        run: |
          cd $GITHUB_WORKSPACE/typed/cljc.analyzer
          echo "Running typed.cljc.analyzer test suite with ClojureCLR..."
          ./script/test-clr
      
      - name: Run typed.clj.analyzer test suite
        run: |
          cd $GITHUB_WORKSPACE/typed/clj.analyzer
          echo "Running typed.clj.analyzer test suite with ClojureCLR..."
          ./script/test-clr
