name: Test and deploy

on:
  pull_request:
  push:
  schedule:
    # Every Monday and Friday at 1PM UTC (9AM EST)
    - cron: "0 13 * * 1,5"

env:
  CLOJURE_CLI_VERSION: "1.11.1.1347"
  BABASHKA_VERSION: "1.3.182"
  DEP_CACHE_INVALIDATOR: "1"

jobs:
  setup:
    # delegate self-pull-requests to push jobs and run cron only in main repo
    if: ${{ !((github.event.pull_request.head.repo.owner.login == 'typedclojure' ||
               github.event.pull_request.head.repo.owner.login == 'frenchy64')
              && github.event_name == 'pull_request')
            &&
            (github.repository == 'typedclojure/typedclojure' ||
             github.event_name != 'schedule')
         }}
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: turtlequeue/setup-babashka@1e886ef84f68692d42c5128245ac83e7dd38ce70
        with:
          babashka-version: ${{env.BABASHKA_VERSION}}
      - run: bb --version
      - run: ./script-test/test_runner.clj
      - name: Print test matrix
        id: set-matrix
        run: ./script/print-actions-matrix.clj
  test:
    needs: setup
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        id: test-deps-cache
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-test-deps-${{ matrix.submodule_hash }}-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/deps.edn') }}-${{ env.CLOJURE_CLI_VERSION }} 
          restore-keys: |
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-test-deps-${{ matrix.submodule_hash }}-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/deps.edn') }}-
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-test-deps-${{ matrix.submodule_hash }}-${{ hashFiles('**/pom.xml') }}-
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-test-deps-${{ matrix.submodule_hash }}-
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-test-deps-
      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.jdk }}
      - uses: DeLaGuardo/setup-clojure@0fc99a3bcdd086349bfb01a9262382fe3d37cd6d
        with:
          cli: ${{ env.CLOJURE_CLI_VERSION }} 
      - name: Run ${{ matrix.submodule }} tests
        run: ./script/run-ci-submodule-tests.sh
        env:
          CLOJURE_VERSION: ${{ matrix.clojure }}
          SUBMODULE: ${{ matrix.submodule }}
          SKIP_DOWNLOAD: false #${{ steps.test-deps-cache.outputs.cache-hit }}
  check-docs:
    runs-on: ubuntu-20.04
    if: ${{ github.repository == 'typedclojure/typedclojure'
            && github.event_name == 'schedule'
         }}
    steps:
      - uses: actions/checkout@v4
      - uses: turtlequeue/setup-babashka@1e886ef84f68692d42c5128245ac83e7dd38ce70
        with:
          babashka-version: ${{env.BABASHKA_VERSION}}
      - run: bb --version
      - run: ./script-test/test_runner.clj
      - run: ./script/check_docs.clj
  deploy:
    needs: test
    if: ${{ github.ref == 'refs/heads/main'
            && github.repository == 'typedclojure/typedclojure'
            && github.event_name == 'push'
         }}
    runs-on: ubuntu-20.04
    env:
      DEPLOY_JDK: 11
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
          key: ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-deploy-deps-${{ matrix.submodule_hash }}-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/deps.edn') }}-${{ env.CLOJURE_CLI_VERSION }} 
          restore-keys: |
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-deploy-deps-${{ matrix.submodule_hash }}-${{ hashFiles('**/pom.xml') }}-${{ hashFiles('**/deps.edn') }}-
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-deploy-deps-${{ matrix.submodule_hash }}-${{ hashFiles('**/pom.xml') }}-
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-deploy-deps-${{ matrix.submodule_hash }}-
            ${{ runner.os }}-${{ env.DEP_CACHE_INVALIDATOR }}-deploy-deps-
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Set up JDK ${{ env.DEPLOY_JDK }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ env.DEPLOY_JDK }}
      - uses: DeLaGuardo/setup-clojure@0fc99a3bcdd086349bfb01a9262382fe3d37cd6d
        with:
          cli: ${{ env.CLOJURE_CLI_VERSION }}
      - uses: turtlequeue/setup-babashka@83e81711f784e0dcb593e53b642fc9850067f234
        with:
          babashka-version: ${{env.BABASHKA_VERSION}}
      - run: bb --version
      - name: Configure settings.xml
        run: |
          mkdir -p ~/.m2
          echo "<settings><servers><server><id>clojars</id><username>typedclojure-clojars</username><password>${{ secrets.ClojarsPassword }}</password></server></servers></settings>" > ~/.m2/settings.xml

      - name: Deploy
        run: ./script/deploy-actions.sh 
        env:
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
      - run: rm -f ~/.m2/settings.xml
        if: ${{ always() }}
