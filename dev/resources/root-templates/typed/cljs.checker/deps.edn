{% do-not-edit-edn-comment %}
{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "{◊clojure-mvn-version◊}"}
        org.clojure/tools.analyzer.jvm {:mvn/version "{◊tools-analyzer-jvm-mvn-version◊}"}
        io.github.frenchy64/fully-satisfies {:mvn/version "{◊fully-satisfies-mvn-version◊}"}
        {◊typedclojure-group-id◊}/typed.clj.checker {:local/root "../clj.checker"
                                            :deps/manifest :deps}
        {◊typedclojure-group-id◊}/typed.cljs.runtime {:local/root "../cljs.runtime"
                                             :deps/manifest :deps}
        {◊typedclojure-group-id◊}/typed.cljs.analyzer {:local/root "../cljs.analyzer"
                                            :deps/manifest :deps}
        org.clojure/clojurescript {:mvn/version "{◊clojurescript-mvn-version◊}"}}
 :aliases {:nREPL
           {:extra-paths ["script"]
            :extra-deps
            {nrepl/nrepl {:mvn/version "{◊nrepl-mvn-version◊}"}
             cider/piggieback {:mvn/version "{◊piggieback-mvn-version◊}"}}
            :main-opts ["-m" "nrepl.cmdline"
                        "--interactive"]}

           :reply
           {:extra-deps
            {reply/reply {:mvn/version "{◊reply-mvn-version◊}"}}
            :main-opts ["-m" "reply.main"]}

           :start-repl
           {:extra-paths ["script"]
            :extra-deps
            {com.bhauman/rebel-readline {:mvn/version "0.1.4"}}
            :main-opts ["-m" "start-repl"]}

           :test
           {:jvm-opts ["-Dtyped.clojure.preserve-check-ns-after-opt-in=true"]
            :extra-paths ["test"]
            :extra-deps {;org.clojure/core.async {:mvn/version "{◊core-async-mvn-version◊}"
                         ;                        :exclusions [org.clojure/tools.analyzer.jvm]}
                         ;org.clojure/tools.trace {:mvn/version "0.7.5"
                         ;                         :exclusions [org.clojure/clojure]}

                         {◊typedclojure-group-id◊}/typed.lib.core.async {:local/root "../lib.core.async"
                                            :deps/manifest :deps}
                         org.clojure/test.check {:mvn/version "{◊test-check-mvn-version◊}"}
                         com.gfredericks/test.chuck {:mvn/version "{◊test-chuck-mvn-version◊}"}}}
           :kaocha
           {:extra-deps {lambdaisland/kaocha {:git/url "{◊kaocha-git-url◊}"
                                              ;; https://github.com/lambdaisland/kaocha/issues/208#issuecomment-822844384
                                              :git/sha "{◊kaocha-sha◊}"}}}
           :codox
           {:extra-deps {codox/codox {:mvn/version "{◊codox-mvn-version◊}"}}
            :extra-paths ["script"]
            :main-opts ["-m" "gen-doc"]}
           :runner
           {:extra-deps {{◊cognitect-test-runner-coordinates◊}
                         {:git/url "{◊cognitect-test-runner-git-url◊}"
                          :git/sha "{◊cognitect-test-runner-sha◊}"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "test/clojure/core/typed/test"
                        "-r" ".*"
                        ;"-w" "clojure.test.junit/with-junit-output"
                        ;"-o" "junit-output.xml"
                        ]}}}
