{% do-not-edit-edn-comment %}
{:paths ["src"]
 :deps {org.clojure/clojure {:mvn/version "{◊clojure-mvn-version◊}"}
        io.github.frenchy64/fully-satisfies {:mvn/version "{◊fully-satisfies-mvn-version◊}"}}
 :mvn/repos {"sonatype-oss-public" {:url "{◊sonatype-oss-public-url◊}"}}
 :aliases {:nREPL
           {:extra-paths ["script"]
            :extra-deps
            {nrepl/nrepl {:mvn/version "{◊nrepl-mvn-version◊}"}
             cider/piggieback {:mvn/version "{◊piggieback-mvn-version◊}"}}
            :main-opts ["-m" "nrepl.cmdline"
                        "--interactive"]}
           :test {:jvm-opts ["-Dtyped.clojure.preserve-check-ns-after-opt-in=true"]
                  :extra-deps {{◊typedclojure-group-id◊}/typed.clj.checker
                               {:local/root "../clj.checker"
                                :deps/manifest :deps}
                               ;;shared tests
                               {◊typedclojure-group-id◊}/typed.cljs.checker
                               {:local/root "../cljs.checker"
                                :deps/manifest :deps}
                               org.clojure/test.check {:mvn/version "{◊test-check-mvn-version◊}"}
                               {◊typedclojure-group-id◊}/typed.clj.runtime
                               {:local/root "../clj.runtime"
                                :deps/manifest :deps}
                               {◊typedclojure-group-id◊}/typed.cljc.analyzer
                               {:local/root "../cljc.analyzer"
                                :deps/manifest :deps}
                               {◊typedclojure-group-id◊}/typed.clj.analyzer
                               {:local/root "../clj.analyzer"
                                :deps/manifest :deps}}
                  :extra-paths ["test"]}
           :codox
           {:extra-deps {codox/codox {:mvn/version "{◊codox-mvn-version◊}"}}
            :extra-paths ["script"]
            :main-opts ["-m" "gen-doc"]}
           :runner
           {:extra-deps
            {{◊cognitect-test-runner-coordinates◊}
             {:git/url "{◊cognitect-test-runner-git-url◊}"
              :git/sha "{◊cognitect-test-runner-sha◊}"}}
            :main-opts ["-m" "cognitect.test-runner"
                        "-d" "test"
                        "-r" ".*"]}}}
